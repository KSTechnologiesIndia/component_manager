// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module component;

import "apps/modular/services/application/service_provider.fidl";
import "apps/network/services/network_error.fidl";

// This represents a node in the JSON structure associated with a facet in a component manifest.
union FacetData {
  // TODO(ianloic): support more JSON data types.
  string string;
  map<string, FacetData> object;
  array<FacetData> array;
};

struct ComponentManifest {
  string id;
  map<string, FacetData> facets;
};

// Implemented by the component_manager.
[ServiceName="component::ComponentManager"]
interface ComponentManager {
  GetComponentManifest(string component_id)
      => (ComponentManifest? component_manifest, network.NetworkError? error);
  // TODO(thatguy): Find the right home for this, and develop some healthy
  // patterns around launching apps defined in a component manifest.
  // ConnectToComponent(string component_id, modular.ServiceProvider& service_provider);
};
